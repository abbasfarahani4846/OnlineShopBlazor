@page "/Recovery"
@using FluentValidation
@using Blazored.FluentValidation
@using Microsoft.AspNetCore.Authentication.Cookies
@using OnlineShopBlazor.Models.Services
@using OnlineShopBlazor.Models.Validations
@using OnlineShopBlazor.Models.ViewModels
@using System.Security.Claims
@using Microsoft.AspNetCore.Authentication;
@using System.Net.Mail
@rendermode InteractiveServer

@inject NavigationManager NavigationManager
@inject IValidator<RecoveryViewModel> Validator
@inject IDbContextFactory<OnlineShopBlazor.Models.Db.OnlineShopOrginalContext> DbFactory

@* 
Steps:
1-Create a blazor page
2-Copy all of content of login intro recovery page and change url and some text from login to ecovery
3-Create RecoveryViewModel for validator. for content can use loginViewModel(Email just)
4-Create validator and copy content from UserValidator
5-Register RecoveryValidator in ProgramFile
5-Use RecoveryViewModel and recoveryValidator in Recovery page
*@

<div class="row justify-content-center" style="margin-top: 200px;">
    <div class="col-md-6 col-lg-5">
        <div class="card shadow-sm mt-4">
            <div class="card-header">
                <h3 class="mb-0">
                    Password recovery
                </h3>
            </div>
            <div class="card-body">
                @* EditForm binds directly to the User model instance *@
                <EditForm Model="RecoveryModel" Enhance OnValidSubmit="HandleValidSubmit" FormName="Recovery">
                    @* Integrate FluentValidation for the User model *@
                    <FluentValidationValidator Validator="Validator" />

                    @* Display general error messages *@
                    @if (!string.IsNullOrEmpty(_errorMessage))
                    {
                        <div class="alert alert-danger" role="alert">
                            @_errorMessage
                        </div>
                    }

                    @* Email Field - Bound to User.Email *@
                    <div class="mb-3">
                        <label for="email" class="form-label">Email address</label>
                        <InputText id="email" type="email" class="form-control" @bind-Value="RecoveryModel.Email" placeholder="Enter your email" />
                        <ValidationMessage For="@(() => RecoveryModel.Email)" class="invalid-feedback d-block" />
                    </div>

                    <div class="d-grid gap-2">
                        <button type="submit" class="btn btn-primary" disabled="@(loading?"disabled":null)">
                            @if (loading)
                            {
                                <Spinner Class="me-3" Type="SpinnerType.Dots" Color="SpinnerColor.Light" />
                            }
                            else
                            {
                                <span>
                                    Recovery
                                </span>
                            }

                        </button>
                    </div>
                </EditForm>
            </div>
            <div class="card-footer text-center py-3">
                <a href="/Login">Already have a account? Login</a>
            </div>
        </div>
    </div>
</div>

<Preload />
@code {
    // Use the User model directly for binding
    [SupplyParameterFromForm]
    public RecoveryViewModel RecoveryModel { get; set; } = new();

    private string? _errorMessage = null;
    private bool loading = false;

    private async Task HandleValidSubmit()
    {
        loading = true;
        await Task.Delay(1500);
        ////-------------------------------------------

        using var _context = DbFactory.CreateDbContext();

        var foundUser = _context.Users.FirstOrDefault(x => x.Email == RecoveryModel.Email.ToLower().Trim());
        if (foundUser == null)
        {
            _errorMessage = "Email is not exist";
            loading = false;
            return;
        }

        ////-------------------------------------------

        foundUser.RecoveryCode = new Random().Next(10000, 100000);
        _context.Users.Update(foundUser);
        _context.SaveChanges();

        ////-------------------------------------------

        MailMessage mail = new MailMessage();
        SmtpClient SmtpServer = new SmtpClient("smtp.gmail.com");

        mail.From = new MailAddress("emailrazortest@gmail.com");
        mail.To.Add(foundUser.Email);
        mail.Subject = "Recovery code";
        mail.Body = "youre recovery code:" + foundUser.RecoveryCode;

        SmtpServer.Port = 587;
        SmtpServer.Credentials = new System.Net.NetworkCredential("emailrazortest@gmail.com", "gmaj evef xyjj kwik");
        SmtpServer.EnableSsl = true;

        await SmtpServer.SendMailAsync(mail);

        loading = false;
        NavigationManager.NavigateTo("/ResetPassword");

    }
}
