@using Blazored.FluentValidation
@rendermode InteractiveServer

<Tabs>
    <Tab Title="Product Descriptio" Active="true">
        <Content>

            <div class="product_info_content">
                @((MarkupString)(Product.Text?.Replace("\n", "<br/>")))
            </div>

        </Content>
    </Tab>
    <Tab Title="Reviews">
        <Content>

            <ReviewComponent Product="@Product" />
        </Content>
    </Tab>
    <Tab Title="Tags">
        <Content>

            <div class="product_info_content">
                <ul>
                    @if (!string.IsNullOrEmpty(Product.Tags))
                    {
                        var tags = Product.Tags.Split(",");

                        @foreach (var item in tags)
                        {
                            <li>
                                @item
                            </li>
                        }
                    }

                </ul>
            </div>

        </Content>
    </Tab>
    <Tab Title="Video">
        <Content>

            <div class="product_tab_vidio text-center">
                <iframe width="729" height="410" src="" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
            </div>

        </Content>
    </Tab>
</Tabs>
<Toasts class="p-3" AutoHide="true" Delay="6000" Placement="ToastsPlacement.TopRight" />
<Preload />

@code {

    [Parameter]
    public Product Product { get; set; }

}
