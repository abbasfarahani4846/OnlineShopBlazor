@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@inject IDbContextFactory<OnlineShopOrginalContext> DbContextFactory
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ToastService ToastService
@rendermode InteractiveServer
@inject NavigationManager NavigationManager

<a class="btn btn-primary" disabled="@(loading?"disabled":null)" @onclick="AddToCartAsync" data-tippy="Add To Cart" data-tippy-inertia="true" data-tippy-delay="50" data-tippy-arrow="true" data-tippy-placement="top">
  
    @if (loading)
    {
        <Spinner Class="me-3" Type="SpinnerType.Dots" Color="SpinnerColor.Light" />
    }
    else
    {
        <span>
            Add To Cart
        </span>
    }
</a>


@code {
    [Parameter] public int ProductId { get; set; }  // پارامتر دریافت شناسه محصول

    private bool loading = false;

    private async Task AddToCartAsync()
    {
        loading = true;
        await Task.Delay(1500);

        // دریافت شناسه کاربر
        var userId = await GetUserIdAsync();

        if (userId == 0)
        {
            loading = false;
            NavigationManager.NavigateTo("/");
            // کاربر وارد نشده است
            return;
        }

        // اتصال به دیتابیس و اضافه کردن محصول به سبد خرید
        using var context = DbContextFactory.CreateDbContext();

        var product = await context.Products.FindAsync(ProductId);
        if (product == null)
        {
            loading = false;
            // محصول پیدا نشد
            return;
        }

        var cartItem = await context.Carts
            .FirstOrDefaultAsync(c => c.UserId == userId && c.ProductId == ProductId);

        // اگر محصول قبلاً در سبد خرید موجود نیست، آن را اضافه می‌کنیم
        if (cartItem == null)
        {
            context.Carts.Add(new Cart
                {
                    UserId = userId,
                    ProductId = ProductId,
                    Count = 1 // پیش‌فرض تعداد 1 است
                });
        }
        else
        {
            // در غیر این صورت تعداد محصول را افزایش می‌دهیم
            cartItem.Count += 1;
        }

        // ذخیره تغییرات در دیتابیس
        await context.SaveChangesAsync();

        loading = false;
    }

    private async Task<int> GetUserIdAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity?.IsAuthenticated == true)
        {
            var userId = (int)int.Parse(user.FindFirst(ClaimTypes.NameIdentifier)?.Value);
            return userId;
        }
        return 0;
    }
}
