@page "/banners/details"
@using Microsoft.EntityFrameworkCore
@using OnlineShopBlazor.Models.Db
@inject IDbContextFactory<OnlineShopBlazor.Models.Db.OnlineShopOrginalContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>Banner</h2>
    <hr />
    @if (banner is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Title</dt>
            <dd class="col-sm-10">@banner.Title</dd>
            <dt class="col-sm-2">Description</dt>
            <dd class="col-sm-10">@banner.Description</dd>
            <dt class="col-sm-2">ImageName</dt>
            <dd class="col-sm-10">@banner.ImageName</dd>
            <dt class="col-sm-2">Priority</dt>
            <dd class="col-sm-10">@banner.Priority</dd>
            <dt class="col-sm-2">Link</dt>
            <dd class="col-sm-10">@banner.Link</dd>
            <dt class="col-sm-2">Position</dt>
            <dd class="col-sm-10">@banner.Position</dd>
        </dl>
        <div>
            <a href="@($"/banners/edit?id={banner.Id}")">Edit</a> |
            <a href="@($"/banners")">Back to List</a>
        </div>
    }
</div>

@code {
    private Banner? banner;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        banner = await context.Banners.FirstOrDefaultAsync(m => m.Id == Id);

        if (banner is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
